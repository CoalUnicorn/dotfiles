""" Initial Vim configuration plus plug-in

" Pathogen
execute pathogen#infect()

filetype plugin indent on


" Settings
set nocompatible
let mapleader = "\<Space>"
set encoding=utf-8
" set spell
" set spelllang=en_gb
set ttyfast
set backspace=indent,eol,start
set noswapfile
set nobackup
set autowrite " Automatically save before :next, :make etc.
set autoread " Automatically reread changed files without asking me anything

" speed up syntax highlighting
set nocursorcolumn
set nocursorline

syntax sync minlines=256
set synmaxcol=300
set re=1

" Visual
set showcmd         " Show (partial) command in the last line of the screen.
set wildmenu                " Command completion
set wildmode=list:longest   " List all matches and complete till longest common string
set laststatus=2            " The last window will have a status line always
set ruler                   " Show the line and column number of the cursor position, separated by a comma.
set lazyredraw              " Don't update the screen while executing macros/commands

" Buffer Visuals
set novisualbell
set cursorline
syntax on
set number 
set tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set autoindent
set smarttab
set wrap
set textwidth=79
set linebreak
set numberwidth=4

" Search
set incsearch
set showmatch
set hlsearch
set ignorecase
set smartcase

" File Type Detect

autocmd BufRead,BufNewFile *.md,*.markdown set filetype=markdown
autocmd BufRead,BufNewFile *.lytex set filetype=tex
autocmd BufNewFile,BufRead *.html set filetype=htmldjango
autocmd BufRead,BufNewFile *.py setlocal foldmethod=indent

""" Tweeks
  " Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

""" Plugins
"_______________________________________________________________________________
" Rainbow
"_______________________________________________________________________________
let g:rainbow_active = 1 "0 if you want to enable it later via :RainbowToggl

let g:rainbow_conf = {
    \    'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick'],
    \    'ctermfgs': ['lightblue', 'lightyellow', 'lightcyan', 'lightmagenta'],
    \    'operators': '_,_',
    \    'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
    \    'separately': {
    \        '*': {},
    \        'tex': {
    \            'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
    \        },
    \        'lisp': {
    \            'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick', 'darkorchid3'],
    \        },
    \        'vim': {
    \            'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
    \        },
    \        'html': {
    \            'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
    \        },
    \        'css': 0,
    \    }
    \}
